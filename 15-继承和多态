和Java语言类似；
class Animal(object):
    def run(self):
        print('Animal is running...')
		
class Dog(Animal):
    def run(self):
        print('Dog is running...')

class Cat(Animal):
    def run(self):
        print('Cat is running...')
		
def run_twice(animal):
    animal.run()
    animal.run()
	
>>> run_twice(Animal())
Animal is running...
Animal is running...

>>> run_twice(Dog())
Dog is running...
Dog is running...
	
1. 静态语言（例如Java）来说，如果需要传入Animal类型，
则传入的对象必须是Animal类型或者它的子类，否则，将无法调用run()方法。

2. Python这样的动态语言来说，则不一定需要传入Animal类型。
我们只需要保证传入的对象有一个run()方法就可以了：
class Timer(object):
    def run(self):
        print('Start...')
		
code示例:

class Animal(object):
    def run(self):
        print('Animal is Running!')
		
class Dog(Animal):
    pass

class Cat(Animal):
    def run(self):
        print('Cat is Running!')
		
class Timer(object):
    def run(self):
        print('Timer!')
		
def run_twice(a):
    a.run()
    a.run()
	
a = Animal()
d = Dog()
c = Cat()
t = Timer()

print('a is Animal : ', isinstance(a, Animal))

run_twice(d)
