1. sys模块有一个argv变量，用list存储了命令行的所有参数
__author__ = 'ZhangYuMin'

import sys

def test():
    args = sys.argv
    if len(args)==1:
        print('Hello, world!')
    elif len(args)==2:
        print('Hello, %s!' % args[1])
    else:
        print('Too many arguments!')

if __name__=='__main__':
    test()
	
	
D:\PYTHON\WorkSpace\08-30>python SysPractice.py
Hello, world!

D:\PYTHON\WorkSpace\08-30>python SysPractice.py ZhangYuMin
Hello, ZhangYuMin!

D:\PYTHON\WorkSpace\08-30>python SysPractice.py ZhangYuMin LG
Too many arguments!

2. 导入第一步中的模块
>>> import SysPractice
>>> SysPractice.test()
Hello, world!

3. 作用域
在Python中，是通过_前缀来实现的私有化。
封装例子如下：
def _private_1(name):
    return 'Hello, guys! %s' % name

def _private_2(name):
    return 'Hi, %s' % name

def greeting(name):
    if len(name) > 3:
        return _private_1(name)
    else:
        return _private_2(name)
		
私有化打招呼方法，只提供greeting方法给模块外部使用。
