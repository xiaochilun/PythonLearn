ReadMe:可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator。
       可以使用isinstance()判断一个对象是否是Iterator对象.
>>> from collections import Iterator
>>> isinstance((x for x in range(10)), Iterator)
True

Iterable & Iterator 的区别：
生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。
把list、dict、str等Iterable变成Iterator可以使用iter()函数：
>>> isinstance([], Iterator)
False
>>> isinstance(iter([]), Iterator)
True

小结

凡是可作用于for循环的对象都是Iterable类型；

凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；

集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。
